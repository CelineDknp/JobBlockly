accessible: true
author: ''
context: |-
    Avant de trier toute une liste, attaquons-nous à un problème plus simple : trouver le plus petit élément.

    Peux-tu créer un algorithme qui retourne le plus petit élément de la liste avec ces blocs ?

    Attention, souviens-toi bien que la liste ne sera pas dans l'ordre !
environment: default
evaluate: best
groups: false
input_random: '0'
limits:
    memory: '100'
    output: '2'
    time: '30'
name: 1. Le plus léger (blocs normaux)
network_grading: false
problems:
    leger:
        options:
            zoom:
                startScale: 1.0
                controls: true
                scaleSpeed: 1.2
                maxScale: 3.0
                minScale: 0.3
                wheel: false
            oneBasedIndex: true
            maxBlocks: Infinity
            grid:
                length: 3
                spacing: 20
                colour: '#ccc'
                snap: true
            css: true
            scrollbars: true
            toolboxPosition: start
            media: plugins/blockly/static/blockly/media/
        type: blockly
        workspace: |-
            <xml xmlns="http://www.w3.org/1999/xhtml">
              <variables></variables>
            </xml>
        name: ''
        header: ''
        toolbox: |-
            <xml xmlns="http://www.w3.org/1999/xhtml">
              <variables>
                <variable type="">liste</variable>
                <variable type="">element</variable>
                <variable type="">plus_leger</variable>
              </variables>
              <block type="procedures_defreturn">
                <mutation>
                  <arg name="liste" varid="TA4gM=pJArTYU7t=`/^z"></arg>
                </mutation>
                <field name="NAME">le_plus_leger</field>
                <comment pinned="false" h="80" w="160">Décrire cette fonction…</comment>
                <value name="RETURN">
                  <block type="variables_get">
                    <field name="VAR" variabletype="">plus_leger</field>
                  </block>
                </value>
              </block>
              <block type="controls_forEach">
                <field name="VAR" variabletype="">element</field>
                <value name="LIST">
                  <block type="variables_get">
                    <field name="VAR" variabletype="">liste</field>
                  </block>
                </value>
              </block>
              <block type="controls_if"></block>
              <block type="variables_get">
                <field name="VAR" variabletype="">element</field>
              </block>
              <block type="variables_set">
                <field name="VAR" variabletype="">plus_leger</field>
              </block>
              <block type="lists_getIndex">
                <mutation statement="false" at="true"></mutation>
                <field name="MODE">GET</field>
                <field name="WHERE">FROM_START</field>
                <value name="VALUE">
                  <block type="variables_get">
                    <field name="VAR" variabletype="">liste</field>
                  </block>
                </value>
                <value name="AT">
                  <block type="math_number">
                    <field name="NUM">0</field>
                  </block>
                </value>
              </block>
              <block type="variables_get">
                <field name="VAR" variabletype="">plus_leger</field>
              </block>
              <block type="logic_compare">
                <field name="OP">LT</field>
              </block>
            </xml>
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
tags: {}
weight: 1.0
